<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.0.xsd
            http://cxf.apache.org/jaxws
            http://cxf.apache.org/schemas/jaxws.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" />
    <context:annotation-config/>
    <context:component-scan base-package="com.cr">
<!--         <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->
    </context:component-scan>

<!--     <bean id="sessionFactory" class="com.sjdf.platform.common.filter.EncryptAnnotationSessionFactoryBean"> -->
<!--         <property name="dataSource" ref="dataSource"/> -->
<!--         <property name="mappingLocations"> -->
<!--             <list> -->
<!--                 <value>classpath:com/cr/*/bean/*.hbm.xml</value> -->
<!--                 加载hibernate的映射文件*.hbm.xml -->
<!--             </list> -->
<!--         </property> -->
<!--         <property name="packagesToScan"> -->
<!--             <list> -->
<!--                 <value>com.sjdf.eiss.bean</value> -->
<!--                 <value>com.sjdf.eiss.workorder.bean</value> -->
<!--                 <value>com.sjdf.finance.bean</value> -->
<!--                 <value>com.sjdf.eiss.recommendcode.bean</value> -->
<!--                 <value>com.sjdf.platform.propconfig.bean</value> -->
<!--                <value>com.sjdf.eiss.baidu.bean</value> -->
<!--                <value>com.sjdf.others.bean</value> -->
<!--             </list> -->
<!--         </property> -->
<!--         <property name="hibernateProperties"> -->
<!--             <props> -->
<!--                 <prop key="hibernate.connection.characterEncoding">UTF-8</prop> -->
<!--                 <prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop> -->
<!--                 <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
<!--                 <prop key="hibernate.current_session_context_class">thread</prop> -->
<!--                 <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop> -->
<!--                 <prop key="hibernate.show_sql">false</prop> -->
<!--                 <prop key="hibernate.format_sql">false</prop> -->
<!--                 <prop key="hibernate.generate_statistics">false</prop> -->
<!--                 <prop key="hibernate.hbm2ddl.auto">update</prop> -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <value>com.cr.*.bean</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
<!--                 <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop> -->
<!--                 <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
<!--                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop> -->
<!--                 将事务交给spring进行管理 -->
<!--                 <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> -->
                <prop key="hibernate.connection.characterEncoding">UTF-8</prop>
                <prop key="hibernate.connection.zeroDateTimeBehavior">convertToNull</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:com/cr/*/dao/sql/*.hbm.xml</value> 
            </list>
        </property> 
    </bean>

<!--     <bean id="sessionFactoryLog" class="com.sjdf.platform.common.filter.EncryptAnnotationSessionFactoryBean"> -->
<!--         <property name="configLocation" value="classpath:hibernate-log.cfg.xml"/> -->
<!--         <property name="packagesToScan" value="com.sjdf.eiss.bean.log"/> -->
<!--         <property name="encrypt" value="true"/> -->
<!--     </bean> -->

    <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->   
        <property name="initialPoolSize" value="12"/>
        <!-- 连接池中保留的最大连接数。Default: 15 --> 
        <property name="maxPoolSize" value="60"/>
        <!-- 连接池中保留的最小连接数。 --> 
        <property name="minPoolSize" value="6"/>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->   
        <property name="acquireIncrement" value="3"/>
        <!-- 两次连接中间隔时间，单位毫秒。Default: 1000 -->   
        <property name="acquireRetryDelay" value="1000"/>
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
        <property name="acquireRetryAttempts" value="30"/>
        <!-- 最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
        <property name="maxIdleTime" value="1800"/>
        <!-- 定义所有连接测试都执行的测试语句。 -->
        <property name="preferredTestQuery" value="select 1"/>
        <!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60"/>
        <!-- 获取Connnection时测试是否有效 -->
        <property name="testConnectionOnCheckin" value="true"/>
        <!-- 在每个connection提交的   时候都将校验其有效性（性能消耗大） -->
<!--         <property name="testConnectionOnCheckout" value="true"/> -->
    </bean>

    <bean id="slave01DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${jdbc.read.only.url}"/>
        <property name="user" value="${jdbc.read.only.username}"/>
        <property name="password" value="${jdbc.read.only.password}"/>
        <!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->   
        <property name="initialPoolSize" value="12"/>
        <!-- 连接池中保留的最大连接数。Default: 15 --> 
        <property name="maxPoolSize" value="60"/>
        <!-- 连接池中保留的最小连接数。 --> 
        <property name="minPoolSize" value="6"/>
        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->   
        <property name="acquireIncrement" value="3"/>
        <!-- 两次连接中间隔时间，单位毫秒。Default: 1000 -->   
        <property name="acquireRetryDelay" value="1000"/>
        <!-- 定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
        <property name="acquireRetryAttempts" value="30"/>
        <!-- 最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
        <property name="maxIdleTime" value="1800"/>
        <!-- 定义所有连接测试都执行的测试语句。 -->
        <property name="preferredTestQuery" value="select 1"/>
        <!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60"/>
        <!-- 获取Connnection时测试是否有效 -->
        <property name="testConnectionOnCheckin" value="true"/>
        <!-- 在每个connection提交的   时候都将校验其有效性（性能消耗大） -->
<!--         <property name="testConnectionOnCheckout" value="true"/> -->
    </bean>

<!-- 定义数据源，使用自己实现的数据源 -->  
    <bean id="dataSource" class="com.cr.web.db.DynamicDataSource">  
        <!-- 设置多个数据源 -->  
        <property name="targetDataSources">  
            <map key-type="java.lang.String">  
                <!-- 这个key需要和程序中的key一致 -->  
                <entry key="master" value-ref="masterDataSource"/>  
                <entry key="slave" value-ref="slave01DataSource"/>  
            </map>  
        </property>  
        <!-- 设置默认的数据源，这里默认走写库 -->  
        <property name="defaultTargetDataSource" ref="masterDataSource"/>  
    </bean> 
</beans>